<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_dangNhap.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOoAAAAwCAYAAAAfMeYHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAOcSURBVHhe7Z0vUNxQEIeRlZWVyLpL3g0zdVQiKysrK5GV
        OCSyshJZWYlkaHIgK5HISmS7GwJDSO5eXkheXt77mDlxM8ddsvv9dvf92+zt8YcFsEB6Fji4Oni3LtYf
        9ZVv8hNe2CAVBh65X92s9oNTvl5ctsnOTGFuzcb844UNYOCBAdHFnbk239fl+tMswtWsWYvzL05BmDBg
        Z0D0ci+VxQ8v2fbw4vCNljGSPREo1QPV0wAGVLCa5ESwbyfJsnWJe0f0tEdPbISNrAxIsst/559HFWte
        5F81Elh/fECE4TuBOmUGtEIdRaw6GE7ZkNw7gWRqBkSsP3VYOViwiBRIp4aU768ZK8yvQULVchcjIlQY
        8MeAZNZTJ7HWE0eMSRlzM7PrmYHeE0xaK1cLtZ4vkN/zF7mxdbi21klb3adgzayafnFkuI7ENwn45tqc
        7xRqveOIkpdqgpJ3ZgZWV6tsq1irbYEzXyC/n0DGgDFrINQlm06h1mNTsikQWSEimPoJpp37gkXBRzjA
        jwOwM3buw4AukbayKpsbgKcPPHzGIyddmyBYkvHoAMpryuseDOhSTeOUjb4hUiJUGAiPgcbsr5xAf4+T
        wnMSPsEnOnf0NE7VLYNAARQwECADpfnyJFQjb3BSgE7qMY7Bb3H7rXFetWqvAhRMcMBAcAwgVKAMDkqS
        Rbs6aAqVs6dAS+AKkoGXGZVdSYAaJKipZ9nG7iRdq0ndINx/3JMyS/Vvo3m3Hm9b6o1w3QgsagZK86Gx
        35d2oAAfNfALHdq0uj3IpvxzHIVYYSAcBiR5XrZPz7DpgcmUhWadWINLZ3NuNuaHE0ljBY/7cmNsazsW
        bf+AMd2Mib2w1yQMlOZma88klmmAbhLoKKmdh1XWZ6qSVRErYp2ZgV3Z9DHN0jJ0ZieRfZyzT2yBZWer
        0Of1sBx7O47t5rkfAtASGNCWvdYu+Q2x8rjF5CP7EsCO6hqHPNGt7vN7GZUhKCsJPqEyUJjbRiMzl7Ra
        ra3KwBaxUjbCwIQMPIh030Wbrc9qZmV74YROCjXCc11eqg9ZZbkYnEm7lJ2V2TeiKoKFgREZkHmgV2XR
        bf+s08YaAXDWiM4ic3nJXEExK8NJ7fw5iUiff2n1nBrGrukBRlB5nc9lLNr7ieJjqrjOsCeIlgwbVMYK
        KKDIuuif6nGmLw+AjylEl+/SWStN5xox9HgOL2yQKgPaJ1u1oE+gcNEQn8UCWGDhFvgPh/mTq+q3S9UA
        AAAASUVORK5CYII=
</value>
  </data>
  <data name="pn_right.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAAoAAAAKCAYAAACNMs+9AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYSURBVChTY/hPJGAgUt3/UYV4Q4ro4AEAI/uOgDWe5B8A
        AAAASUVORK5CYII=
</value>
  </data>
</root>